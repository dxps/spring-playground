/*
 * Chapter 01.00 Calendar
 */
buildscript {
    ext {}
    repositories {
        jcenter()
        maven {url "https://plugins.gradle.org/m2/"}
        maven {url "https://repo.spring.io/milestone"}
        maven {url "https://repo.spring.io/libs-milestone"}
        
        maven {url "https://repo.spring.io/libs-snapshot"}
        maven {url "https://repo.spring.io/snapshot"}
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath "com.bmuschko:gradle-tomcat-plugin:2.2.5"
    }
}

repositories {
    jcenter()
    maven {url "https://plugins.gradle.org/m2/"}
    maven {url "https://repo.spring.io/milestone"}
    maven {url "https://repo.spring.io/libs-milestone"}
    
    maven {url "https://repo.spring.io/libs-snapshot"}
    maven {url "https://repo.spring.io/snapshot"}
}

apply plugin: 'war'
apply plugin: "com.bmuschko.tomcat"

apply plugin: "io.spring.dependency-management"

//    apply from: "${rootDir}/config/sonarqube-multiproject.gradle"

//-----------------------------------------------------------------------//
dependencyManagement {
    imports {
        mavenBom("io.spring.platform:platform-bom:${springIoVersion}")
    }
}

// Spring Security 4, for chapter 1, version 0
version = '4.1.0-SNAPSHOT'

dependencies {
    
    // Spring Security Dependencies
    compile('org.springframework.security:spring-security-config')
    compile('org.springframework.security:spring-security-core')
    compile('org.springframework.security:spring-security-web')
    
    // From Spring IO
    compile "org.springframework.boot:spring-boot-starter-logging"
    compile 'org.springframework.boot:spring-boot-devtools'
    compile "org.springframework:spring-aop"
    compile "org.springframework:spring-beans"
    compile "org.springframework:spring-context"
    compile "org.springframework:spring-context-support"
    compile "org.springframework:spring-core"
    compile "org.springframework:spring-expression"
    compile "org.springframework:spring-jdbc"
    compile "org.springframework:spring-tx"
    compile "org.springframework:spring-web"
    compile "org.springframework:spring-webmvc"
    
    // Servlets
    compile('javax.servlet:jstl')
    providedCompile('javax.servlet:javax.servlet-api')
    providedCompile('javax.servlet.jsp:javax.servlet.jsp-api')
    
    // Logging
    compile 'org.slf4j:slf4j-api'
    
    // JSON support
    compile 'org.codehaus.jackson:jackson-core-asl'
    compile 'org.codehaus.jackson:jackson-mapper-asl'
    compile 'com.fasterxml.jackson.core:jackson-annotations'
    
    // JSR-303 Validation Support
    compile 'javax.validation:validation-api'
    compile 'org.hibernate:hibernate-validator'
    compile 'org.hibernate:hibernate-validator-annotation-processor'
    
    compile 'joda-time:joda-time'
    
    compile ("com.h2database:h2")
    compile ("org.aspectj:aspectjweaver")
    
    // Tomcat Plugin
    def tomcatVersion = '8.0.42'
    tomcat "org.apache.tomcat.embed:tomcat-embed-core:${tomcatVersion}",
          "org.apache.tomcat.embed:tomcat-embed-logging-juli:${tomcatVersion}",
          "org.apache.tomcat.embed:tomcat-embed-jasper:${tomcatVersion}"
    
    //-----------------------------------------------------------------------//
    // Additional Thymeleaf dependencies
    compile "org.thymeleaf:thymeleaf"
    compile "org.thymeleaf:thymeleaf-spring4"
    
    compile ("org.thymeleaf.extras:thymeleaf-extras-conditionalcomments")
    compile ("org.thymeleaf.extras:thymeleaf-extras-java8time")
    compile ("org.thymeleaf.extras:thymeleaf-extras-springsecurity4")
    compile ("nz.net.ultraq.thymeleaf:thymeleaf-layout-dialect")
    
    //-----------------------------------------------------------------------//
    // Utils:
    compile ("org.yaml:snakeyaml")
    compile ("org.apache.commons:commons-lang3")
    // Prefer Java8 time instead of Joda Time:
    // compile ("joda-time:joda-time")
    //compile("com.google.guava:guava:${guavaVersion}")
    // compile ("io.logz.log4j2:logzio-log4j2-appender:1.0.5")
    
    compile ("io.logz.logback:logzio-logback-appender:1.0.11")
    compile ("ch.qos.logback:logback-classic")
    compile ("org.slf4j:jul-to-slf4j")
    compile ("org.slf4j:log4j-over-slf4j")
    
    //-----------------------------------------------------------------------//
    // Testing:
    testCompile "junit:junit"
    testCompile "org.hamcrest:hamcrest-all"
    testCompile "org.assertj:assertj-core"
    
}

//---------------------------------------------------------------------------//
task explodedWar(type: Copy) {
    into "$buildDir/exploded"
    with war
}

war {
    baseName = 'calendar'
    archiveName = "${baseName}.war"
}

war.doLast {
    explodedWar.execute()
}

war.dependsOn explodedWar


tomcat {
    httpPort = 8080
    httpsPort = 8081
    enableSSL = true
    contextPath = '/'
    
    users {
        user {
            username = 'admin'
            password = 'admin'
            roles = ['developers', 'admin']
        }
    }
}
